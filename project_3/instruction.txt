poseidon2哈希算法实现说明文档

1. Poseidon2 算法在 Circom 中的实现

Circom 是一个专门用于构建零知识证明电路的语言。在该文件中，Poseidon2 哈希函数的实现被用作零知识证明的核心组件之一。其主要特性包括：
输入与输出：该电路通常接收一组输入并返回一个哈希值。
S-Box 操作：Poseidon2 使用的 S-Box 是一个非线性变换，用于增加哈希函数的复杂度。
状态更新：通过多次迭代对状态进行更新，确保输入数据在哈希过程中得到充分混合。
优化：Poseidon2 设计上考虑了性能优化，通过适应性的循环次数来平衡计算复杂性和安全性。

2. 代码逻辑

定义输入：首先定义了输入值的长度和结构。这些输入值将被传入哈希函数中，并被用于最终的哈希计算。
循环迭代：通过多次迭代更新哈希状态，通常与 S-Box 变换一起执行。每次迭代后，状态值被更新，确保信息充分混合。
输出生成：最终，通过指定的电路输出，生成计算出的哈希值，并返回给外部系统进行后续处理。

3. 数学推导与表示

Poseidon2 算法的安全性来源于其多轮的非线性变换与线性变换的结合。每一轮计算都包含 S-Box 变换，确保输入数据被高度非线性化，从而增加哈希的抗碰撞性和抗预映像性。

哈希过程：
    初始状态 S_0 由输入数据构建。
    每一轮更新公式：
      S_{i+1} = 	S-Box(S_i)* M_i  	(加线性变换)
    通过多轮迭代，最终计算出哈希值。
    最后的哈希输出是所有状态的综合反映，保证了信息的不可逆性和完整性。